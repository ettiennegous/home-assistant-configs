#Fan
- alias: Turn Fan Light On
  hide_entity: True
  trigger:
    platform: state
    entity_id: input_boolean.fan_light
    to: 'on'
  action:
    service: shell_command.fan_light_on
- alias: Turn Fan Light Off
  hide_entity: True
  trigger:
    platform: state
    entity_id: input_boolean.fan_light
    to: 'off'
  action:
    service: shell_command.fan_light_off
- alias: Turn Fan Off
  hide_entity: True
  trigger:
    platform: mqtt
    topic: ceiling_fan/on/set
    payload: 'false'
  action:
    - service: shell_command.fan_off
    - service: mqtt.publish
      data:
        topic: "ceiling_fan/on/state"
        payload: "false"
    - service: mqtt.publish
      data:
        topic: "ceiling_fan/speed/state"
        payload: ""
- alias: Turn Fan On
  hide_entity: True
  trigger:
    platform: mqtt
    topic: ceiling_fan/on/set
    payload: 'true'
  action:
    - service: shell_command.fan_med
    - service: mqtt.publish
      data:
        topic: "ceiling_fan/on/state"
        payload: "true"
    - service: mqtt.publish
      data:
        topic: "ceiling_fan/speed/state"
        payload: "medium"
- alias: Turn Fan Low
  hide_entity: True
  trigger:
    platform: mqtt
    topic: ceiling_fan/speed/set
    payload: 'low'
  action:
    service: shell_command.fan_low
- alias: Turn Fan Medium
  hide_entity: True
  trigger:
    platform: mqtt
    topic: ceiling_fan/speed/set
    payload: 'medium'
  action:
    service: shell_command.fan_med
- alias: Turn Fan High
  hide_entity: True
  trigger:
    platform: mqtt
    topic: ceiling_fan/speed/set
    payload: 'high'
  action:
    service: shell_command.fan_hi
#plug 1
- alias: Turn Plug 1 On
  hide_entity: True
  trigger:
    platform: state
    entity_id: input_boolean.plug_1
    to: 'on'
  action:
    service: shell_command.plug_1_on
- alias: Turn Plug 1 Off
  hide_entity: True
  trigger:
    platform: state
    entity_id: input_boolean.plug_1
    to: 'off'
  action:
    service: shell_command.plug_1_off
#plug 2
- alias: Turn Plug 2 On
  hide_entity: True
  trigger:
    platform: state
    entity_id: input_boolean.plug_2
    to: 'on'
  action:
    service: shell_command.plug_2_on
- alias: Turn Plug 2 Off
  hide_entity: True
  trigger:
    platform: state
    entity_id: input_boolean.plug_2
    to: 'off'
  action:
    service: shell_command.plug_2_off
#plug 3
# - alias: Turn Plug 3 On
#   hide_entity: True
#   trigger:
#     platform: state
#     entity_id: input_boolean.plug_3
#     to: 'on'
#   action:
#     service: shell_command.plug_3_on
# - alias: Turn Plug 3 Off
#   hide_entity: True
#   trigger:
#     platform: state
#     entity_id: input_boolean.plug_3
#     to: 'off'
#   action:
#     service: shell_command.plug_3_off
# #plug 4     
# - alias: Turn Plug 4 On
#   hide_entity: True
#   trigger:
#     platform: state
#     entity_id: input_boolean.plug_4
#     to: 'on'
#   action:
#     service: shell_command.plug_4_on
# - alias: Turn Plug 4 Off
#   hide_entity: True
#   trigger:
#     platform: state
#     entity_id: input_boolean.plug_4
#     to: 'off'
#   action:
#     service: shell_command.plug_4_off
# #all plugs
# - alias: Turn All Plugs On
#   hide_entity: True
#   trigger:
#     platform: state
#     entity_id: input_boolean.all_plugs
#     to: 'on'
#   action:
#     service: shell_command.plugs_all_on
# - alias: Turn All Plug Off
#   hide_entity: True
#   trigger:
#     platform: state
#     entity_id: input_boolean.all_plugs
#     to: 'off'
#   action:
#     service: shell_command.plugs_all_off
#misc
- alias: Ruby Bed Time
  hide_entity: True
  trigger:
    - platform: time
      at: '19:00:00'
    - platform: state
      entity_id: input_boolean.ruby_bedtime
      from: 'off'
      to: 'on'
  action:
    - service: media_player.volume_set
      data:
        entity_id: media_player.everywhere
        volume_level: '{{  states.input_number.announcements_volume.state  }}'
    - service: tts.google_say
      entity_id: media_player.everywhere
      data:
        message: 'Ruby its time for bed, go brush your teeth.'
    - service: input_boolean.turn_off
      entity_id: input_boolean.ruby_bedtime
- alias: Ruby Bath Time
  hide_entity: True
  trigger:
    - platform: time
      at: '17:00:00'
    - platform: state
      entity_id: input_boolean.ruby_bathtime
      from: 'off'
      to: 'on'
  action:
    - service: media_player.volume_set
      data:
        entity_id: media_player.everywhere
        volume_level: '{{  states.input_number.announcements_volume.state  }}'
    - service: tts.google_say
      entity_id: media_player.everywhere
      data:
        message: 'Ruby its bathtime, Lets go kiddo.'
    - service: input_boolean.turn_off
      entity_id: input_boolean.ruby_bathtime
# - alias: Sunset
#   hide_entity: True
#   # Notify me on my mobile phone of an event
#   trigger:
#     platform: sun
#     event: sunset
#     offset: -00:30
#   action:
#     # Actions are scripts so can also be a list of actions
#     - service: notify.notify
#       data:
#         message: Beautiful sunset!
#     - delay: 0:35
#     - service: notify.notify
#       data:
#         message: Oh wow you really missed something great.
- alias: Bedtime Scene On
  hide_entity: True
  trigger:
    platform: state
    entity_id: input_boolean.bedtime_scene
    from: 'off'
    to: 'on'
  action:
    - service: light.turn_on
      data: 
        entity_id: light.charlie_dimmable_13
        brightness: 40 # 0 to 255
    - service: input_boolean.turn_on
      entity_id: input_boolean.fan_light
    - service: switch.turn_on
      entity_id: switch.woodstock_switch
    - service: input_boolean.turn_off
      entity_id: input_boolean.doorbell
- alias: Bedtime Scene Off
  hide_entity: True
  trigger:
    platform: state
    entity_id: input_boolean.bedtime_scene
    from: 'on'
    to: 'off'
  action:
    - service: light.turn_off
      data: 
        entity_id: light.charlie_dimmable_13
    - service: input_boolean.turn_off
      entity_id: input_boolean.fan_light
    - service: switch.turn_off
      entity_id: switch.woodstock_switch
- alias: MQTT Camera Event
  hide_entity: True
  trigger:
    platform: mqtt
    topic: topic/test
  action:
    - service: notify.notify
      data_template:
        message: >
          Camera Event {{ trigger.payload }}
- alias: 'Welcome Person Home'
  trigger:
    platform: state
    entity_id: device_tracker.ettiennes_iphone, device_tracker.kkramers_iphone
    from: 'not_home'
    to: 'home'
    for:
      minutes: 0
  action:
    - service: tts.google_say
      data_template:
        entity_id: media_player.everywhere
        language: en
        message: > 
          Welcome home {{ trigger.to_state.attributes.friendly_name }}.
- alias: Morning Routine Scene On
  hide_entity: True
  trigger:
    platform: state
    entity_id: input_boolean.morning_scene
    from: 'off'
    to: 'on'
  action:
    - service: media_player.select_source
      data:
        entity_id: media_player.spotify
        source: "everywhere"
    - service: media_player.play_media
      data: 
        entity_id: media_player.spotify
        media_content_type: playlist
        media_content_id: spotify:user:spotify:playlist:37i9dQZF1DXa1BeMIGX5Du
    - service: switch.turn_on
      entity_id: switch.lucy_switch
    - service: input_boolean.turn_on
      entity_id: input_boolean.doorbell
- alias: Morning Routine Scene Off
  hide_entity: True
  trigger:
    platform: state
    entity_id: input_boolean.morning_scene
    from: 'on'
    to: 'off'
  action:
    - service: media_player.media_stop
      entity_id: media_player.everywhere
    - service: switch.turn_off
      entity_id: switch.lucy_switch
- alias: 'Set Spotify Volume'
  trigger:
      platform: state
      entity_id: input_number.spotify_volume
  action:
      service: media_player.volume_set
      data_template:
        entity_id: media_player.spotify
        volume_level: '{{  states.input_number.spotify_volume.state  }}'
- alias: Doorbell
  hide_entity: True
  trigger: 
    platform: state
    entity_id: binary_sensor.outside_motion_sensor_18
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: binary_sensor.front_door_sensor_6
        state: 'off'
      - condition: state
        entity_id: input_boolean.doorbell
        state: 'on'
  action:
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.everywhere
        volume_level: '{{  states.input_number.announcements_volume.state  }}'
    - service: media_player.play_media
      data:
        entity_id: media_player.everywhere
        media_content_id: !secret doorbell_mp3_url
        media_content_type: audio/mp3
- alias: 'Set Everywhere Volume'
  trigger:
      platform: state
      entity_id: input_number.announcements_volume
  action:
      service: media_player.volume_set
      data_template:
        entity_id: media_player.everywhere
        volume_level: '{{  states.input_number.announcements_volume.state  }}'